# credofaster_partner_api
#
# This file was automatically generated by
# APIMATIC v2.0 ( https://apimatic.io ).

module CredofasterPartnerApi
  # PartnerAirtimeRequest Model.
  class PartnerAirtimeRequest < BaseModel
    # TODO: Write general description for this method
    # @return [Initiator]
    attr_accessor :initiator

    # TODO: Write general description for this method
    # @return [List of SingleAirtimeParameter]
    attr_accessor :parameters

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['initiator'] = 'initiator'
      @_hash['parameters'] = 'parameters'
      @_hash
    end

    def initialize(initiator = nil,
                   parameters = nil)
      @initiator = initiator
      @parameters = parameters
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      initiator = Initiator.from_hash(hash['initiator']) if hash['initiator']
      # Parameter is an array, so we need to iterate through it
      parameters = nil
      unless hash['parameters'].nil?
        parameters = []
        hash['parameters'].each do |structure|
          parameters << (SingleAirtimeParameter.from_hash(structure) if structure)
        end
      end

      # Create object from extracted values.
      PartnerAirtimeRequest.new(initiator,
                                parameters)
    end
  end
end
