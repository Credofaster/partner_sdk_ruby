# credofaster_partner_api
#
# This file was automatically generated by
# APIMATIC v2.0 ( https://apimatic.io ).

module CredofasterPartnerApi
  # Currency Declarative Type
  class Denomination < BaseModel
    # Available Name: KE
    # @return [String]
    attr_accessor :name

    # Amount to Request
    # @return [Integer]
    attr_accessor :value

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['name'] = 'name'
      @_hash['value'] = 'value'
      @_hash
    end

    def initialize(name = 'KE',
                   value = 10)
      @name = name
      @value = value
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      name = hash['name'] ||= 'KE'
      value = hash['value'] ||= 10

      # Create object from extracted values.
      Denomination.new(name,
                       value)
    end
  end
end
