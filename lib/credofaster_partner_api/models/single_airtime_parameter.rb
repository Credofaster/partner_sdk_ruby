# credofaster_partner_api
#
# This file was automatically generated by
# APIMATIC v2.0 ( https://apimatic.io ).

module CredofasterPartnerApi
  # SingleAirtimeParameter Model.
  class SingleAirtimeParameter < BaseModel
    # A UUID for Each
    # @return [UUID | String]
    attr_accessor :reference_id

    # Which Country are you requesting in
    # @return [String]
    attr_accessor :country

    # The Receipient's Account. Can be Phone Number(International Format)
    # @return [String]
    attr_accessor :account_no

    # Currency Declarative Type
    # @return [Denomination]
    attr_accessor :denomination

    # Any Other Tags to accompany the Request
    # @return [Object]
    attr_accessor :other

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['reference_id'] = 'reference_id'
      @_hash['country'] = 'country'
      @_hash['account_no'] = 'account_no'
      @_hash['denomination'] = 'denomination'
      @_hash['other'] = 'other'
      @_hash
    end

    def initialize(reference_id = nil,
                   country = 'KE',
                   account_no = '254705126329',
                   denomination = nil,
                   other = nil)
      @reference_id = reference_id
      @country = country
      @account_no = account_no
      @denomination = denomination
      @other = other
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      reference_id = hash['reference_id']
      country = hash['country'] ||= 'KE'
      account_no = hash['account_no'] ||= '254705126329'
      denomination = Denomination.from_hash(hash['denomination']) if
        hash['denomination']
      other = hash['other']

      # Create object from extracted values.
      SingleAirtimeParameter.new(reference_id,
                                 country,
                                 account_no,
                                 denomination,
                                 other)
    end
  end
end
